//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebDocuments.ServiceDocumento {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auditoria", Namespace="http://schemas.datacontract.org/2004/07/eDocuments.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebDocuments.ServiceDocumento.BEDocumento))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebDocuments.ServiceDocumento.BECarpeta))]
    public partial class Auditoria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime aud_fec_ingresoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime aud_fec_modificacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string aud_usr_ingresoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string aud_usr_modificacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cod_estado_registroField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime aud_fec_ingreso {
            get {
                return this.aud_fec_ingresoField;
            }
            set {
                if ((this.aud_fec_ingresoField.Equals(value) != true)) {
                    this.aud_fec_ingresoField = value;
                    this.RaisePropertyChanged("aud_fec_ingreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime aud_fec_modificacion {
            get {
                return this.aud_fec_modificacionField;
            }
            set {
                if ((this.aud_fec_modificacionField.Equals(value) != true)) {
                    this.aud_fec_modificacionField = value;
                    this.RaisePropertyChanged("aud_fec_modificacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string aud_usr_ingreso {
            get {
                return this.aud_usr_ingresoField;
            }
            set {
                if ((object.ReferenceEquals(this.aud_usr_ingresoField, value) != true)) {
                    this.aud_usr_ingresoField = value;
                    this.RaisePropertyChanged("aud_usr_ingreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string aud_usr_modificacion {
            get {
                return this.aud_usr_modificacionField;
            }
            set {
                if ((object.ReferenceEquals(this.aud_usr_modificacionField, value) != true)) {
                    this.aud_usr_modificacionField = value;
                    this.RaisePropertyChanged("aud_usr_modificacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod_estado_registro {
            get {
                return this.cod_estado_registroField;
            }
            set {
                if ((this.cod_estado_registroField.Equals(value) != true)) {
                    this.cod_estado_registroField = value;
                    this.RaisePropertyChanged("cod_estado_registro");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BEDocumento", Namespace="http://schemas.datacontract.org/2004/07/eDocuments.Entities")]
    [System.SerializableAttribute()]
    public partial class BEDocumento : WebDocuments.ServiceDocumento.Auditoria {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cod_carpetaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cod_documentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cod_perfilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cod_propietarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cod_tipo_documentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cod_usuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fec_vigenciaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gls_nombre_archivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gls_nombre_documentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gls_perfilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gls_propietarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gls_ruta_carpetaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gls_tipo_documentoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod_carpeta {
            get {
                return this.cod_carpetaField;
            }
            set {
                if ((this.cod_carpetaField.Equals(value) != true)) {
                    this.cod_carpetaField = value;
                    this.RaisePropertyChanged("cod_carpeta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod_documento {
            get {
                return this.cod_documentoField;
            }
            set {
                if ((this.cod_documentoField.Equals(value) != true)) {
                    this.cod_documentoField = value;
                    this.RaisePropertyChanged("cod_documento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod_perfil {
            get {
                return this.cod_perfilField;
            }
            set {
                if ((this.cod_perfilField.Equals(value) != true)) {
                    this.cod_perfilField = value;
                    this.RaisePropertyChanged("cod_perfil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod_propietario {
            get {
                return this.cod_propietarioField;
            }
            set {
                if ((this.cod_propietarioField.Equals(value) != true)) {
                    this.cod_propietarioField = value;
                    this.RaisePropertyChanged("cod_propietario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod_tipo_documento {
            get {
                return this.cod_tipo_documentoField;
            }
            set {
                if ((this.cod_tipo_documentoField.Equals(value) != true)) {
                    this.cod_tipo_documentoField = value;
                    this.RaisePropertyChanged("cod_tipo_documento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cod_usuario {
            get {
                return this.cod_usuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.cod_usuarioField, value) != true)) {
                    this.cod_usuarioField = value;
                    this.RaisePropertyChanged("cod_usuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fec_vigencia {
            get {
                return this.fec_vigenciaField;
            }
            set {
                if ((this.fec_vigenciaField.Equals(value) != true)) {
                    this.fec_vigenciaField = value;
                    this.RaisePropertyChanged("fec_vigencia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gls_nombre_archivo {
            get {
                return this.gls_nombre_archivoField;
            }
            set {
                if ((object.ReferenceEquals(this.gls_nombre_archivoField, value) != true)) {
                    this.gls_nombre_archivoField = value;
                    this.RaisePropertyChanged("gls_nombre_archivo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gls_nombre_documento {
            get {
                return this.gls_nombre_documentoField;
            }
            set {
                if ((object.ReferenceEquals(this.gls_nombre_documentoField, value) != true)) {
                    this.gls_nombre_documentoField = value;
                    this.RaisePropertyChanged("gls_nombre_documento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gls_perfil {
            get {
                return this.gls_perfilField;
            }
            set {
                if ((object.ReferenceEquals(this.gls_perfilField, value) != true)) {
                    this.gls_perfilField = value;
                    this.RaisePropertyChanged("gls_perfil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gls_propietario {
            get {
                return this.gls_propietarioField;
            }
            set {
                if ((object.ReferenceEquals(this.gls_propietarioField, value) != true)) {
                    this.gls_propietarioField = value;
                    this.RaisePropertyChanged("gls_propietario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gls_ruta_carpeta {
            get {
                return this.gls_ruta_carpetaField;
            }
            set {
                if ((object.ReferenceEquals(this.gls_ruta_carpetaField, value) != true)) {
                    this.gls_ruta_carpetaField = value;
                    this.RaisePropertyChanged("gls_ruta_carpeta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gls_tipo_documento {
            get {
                return this.gls_tipo_documentoField;
            }
            set {
                if ((object.ReferenceEquals(this.gls_tipo_documentoField, value) != true)) {
                    this.gls_tipo_documentoField = value;
                    this.RaisePropertyChanged("gls_tipo_documento");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BECarpeta", Namespace="http://schemas.datacontract.org/2004/07/eDocuments.Entities")]
    [System.SerializableAttribute()]
    public partial class BECarpeta : WebDocuments.ServiceDocumento.Auditoria {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cod_carpetaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cod_carpeta_padreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gls_ruta_carpetaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod_carpeta {
            get {
                return this.cod_carpetaField;
            }
            set {
                if ((this.cod_carpetaField.Equals(value) != true)) {
                    this.cod_carpetaField = value;
                    this.RaisePropertyChanged("cod_carpeta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod_carpeta_padre {
            get {
                return this.cod_carpeta_padreField;
            }
            set {
                if ((this.cod_carpeta_padreField.Equals(value) != true)) {
                    this.cod_carpeta_padreField = value;
                    this.RaisePropertyChanged("cod_carpeta_padre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gls_ruta_carpeta {
            get {
                return this.gls_ruta_carpetaField;
            }
            set {
                if ((object.ReferenceEquals(this.gls_ruta_carpetaField, value) != true)) {
                    this.gls_ruta_carpetaField = value;
                    this.RaisePropertyChanged("gls_ruta_carpeta");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceDocumento.IDocumentoService")]
    public interface IDocumentoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/RegistrarCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/RegistrarCarpetaResponse")]
        int RegistrarCarpeta(WebDocuments.ServiceDocumento.BECarpeta oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/RegistrarCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/RegistrarCarpetaResponse")]
        System.Threading.Tasks.Task<int> RegistrarCarpetaAsync(WebDocuments.ServiceDocumento.BECarpeta oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/EliminarCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/EliminarCarpetaResponse")]
        int EliminarCarpeta(WebDocuments.ServiceDocumento.BECarpeta oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/EliminarCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/EliminarCarpetaResponse")]
        System.Threading.Tasks.Task<int> EliminarCarpetaAsync(WebDocuments.ServiceDocumento.BECarpeta oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ModificarCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/ModificarCarpetaResponse")]
        bool ModificarCarpeta(WebDocuments.ServiceDocumento.BECarpeta oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ModificarCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/ModificarCarpetaResponse")]
        System.Threading.Tasks.Task<bool> ModificarCarpetaAsync(WebDocuments.ServiceDocumento.BECarpeta oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ModificarCarpetaGestion", ReplyAction="http://tempuri.org/IDocumentoService/ModificarCarpetaGestionResponse")]
        bool ModificarCarpetaGestion(WebDocuments.ServiceDocumento.BECarpeta oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ModificarCarpetaGestion", ReplyAction="http://tempuri.org/IDocumentoService/ModificarCarpetaGestionResponse")]
        System.Threading.Tasks.Task<bool> ModificarCarpetaGestionAsync(WebDocuments.ServiceDocumento.BECarpeta oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ObtenerCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/ObtenerCarpetaResponse")]
        WebDocuments.ServiceDocumento.BECarpeta ObtenerCarpeta(int cod_carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ObtenerCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/ObtenerCarpetaResponse")]
        System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BECarpeta> ObtenerCarpetaAsync(int cod_carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/RegistrarDocumento", ReplyAction="http://tempuri.org/IDocumentoService/RegistrarDocumentoResponse")]
        int RegistrarDocumento(WebDocuments.ServiceDocumento.BEDocumento oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/RegistrarDocumento", ReplyAction="http://tempuri.org/IDocumentoService/RegistrarDocumentoResponse")]
        System.Threading.Tasks.Task<int> RegistrarDocumentoAsync(WebDocuments.ServiceDocumento.BEDocumento oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ModificarDocumento", ReplyAction="http://tempuri.org/IDocumentoService/ModificarDocumentoResponse")]
        bool ModificarDocumento(WebDocuments.ServiceDocumento.BEDocumento oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ModificarDocumento", ReplyAction="http://tempuri.org/IDocumentoService/ModificarDocumentoResponse")]
        System.Threading.Tasks.Task<bool> ModificarDocumentoAsync(WebDocuments.ServiceDocumento.BEDocumento oParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ModificarNombreArchivo", ReplyAction="http://tempuri.org/IDocumentoService/ModificarNombreArchivoResponse")]
        bool ModificarNombreArchivo(int codigo, string descripcionDocumento, string nombreArchivo, System.DateTime fechaVigencia, string usuarioModificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ModificarNombreArchivo", ReplyAction="http://tempuri.org/IDocumentoService/ModificarNombreArchivoResponse")]
        System.Threading.Tasks.Task<bool> ModificarNombreArchivoAsync(int codigo, string descripcionDocumento, string nombreArchivo, System.DateTime fechaVigencia, string usuarioModificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ObtenerDocumento", ReplyAction="http://tempuri.org/IDocumentoService/ObtenerDocumentoResponse")]
        WebDocuments.ServiceDocumento.BEDocumento ObtenerDocumento(int cod_documento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ObtenerDocumento", ReplyAction="http://tempuri.org/IDocumentoService/ObtenerDocumentoResponse")]
        System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento> ObtenerDocumentoAsync(int cod_documento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ObtenerDocumentoDownload", ReplyAction="http://tempuri.org/IDocumentoService/ObtenerDocumentoDownloadResponse")]
        WebDocuments.ServiceDocumento.BEDocumento ObtenerDocumentoDownload(int cod_documento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ObtenerDocumentoDownload", ReplyAction="http://tempuri.org/IDocumentoService/ObtenerDocumentoDownloadResponse")]
        System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento> ObtenerDocumentoDownloadAsync(int cod_documento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ListarDocumento", ReplyAction="http://tempuri.org/IDocumentoService/ListarDocumentoResponse")]
        WebDocuments.ServiceDocumento.BEDocumento[] ListarDocumento(WebDocuments.ServiceDocumento.BEDocumento oBusqueda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ListarDocumento", ReplyAction="http://tempuri.org/IDocumentoService/ListarDocumentoResponse")]
        System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento[]> ListarDocumentoAsync(WebDocuments.ServiceDocumento.BEDocumento oBusqueda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ListarDocumentoPorCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/ListarDocumentoPorCarpetaResponse")]
        WebDocuments.ServiceDocumento.BEDocumento[] ListarDocumentoPorCarpeta(int cod_carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ListarDocumentoPorCarpeta", ReplyAction="http://tempuri.org/IDocumentoService/ListarDocumentoPorCarpetaResponse")]
        System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento[]> ListarDocumentoPorCarpetaAsync(int cod_carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ListarDocumentoPorCarpetaSegunUsuario", ReplyAction="http://tempuri.org/IDocumentoService/ListarDocumentoPorCarpetaSegunUsuarioRespons" +
            "e")]
        WebDocuments.ServiceDocumento.BEDocumento[] ListarDocumentoPorCarpetaSegunUsuario(int cod_carpeta, string cod_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ListarDocumentoPorCarpetaSegunUsuario", ReplyAction="http://tempuri.org/IDocumentoService/ListarDocumentoPorCarpetaSegunUsuarioRespons" +
            "e")]
        System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento[]> ListarDocumentoPorCarpetaSegunUsuarioAsync(int cod_carpeta, string cod_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ListarDocumentoPorUsuario", ReplyAction="http://tempuri.org/IDocumentoService/ListarDocumentoPorUsuarioResponse")]
        WebDocuments.ServiceDocumento.BEDocumento[] ListarDocumentoPorUsuario(string cod_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/ListarDocumentoPorUsuario", ReplyAction="http://tempuri.org/IDocumentoService/ListarDocumentoPorUsuarioResponse")]
        System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento[]> ListarDocumentoPorUsuarioAsync(string cod_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/GetNombreArchivo", ReplyAction="http://tempuri.org/IDocumentoService/GetNombreArchivoResponse")]
        string GetNombreArchivo(int cod_documento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/GetNombreArchivo", ReplyAction="http://tempuri.org/IDocumentoService/GetNombreArchivoResponse")]
        System.Threading.Tasks.Task<string> GetNombreArchivoAsync(int cod_documento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/EliminarDocumento", ReplyAction="http://tempuri.org/IDocumentoService/EliminarDocumentoResponse")]
        bool EliminarDocumento(int cod_documento, string cod_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentoService/EliminarDocumento", ReplyAction="http://tempuri.org/IDocumentoService/EliminarDocumentoResponse")]
        System.Threading.Tasks.Task<bool> EliminarDocumentoAsync(int cod_documento, string cod_usuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentoServiceChannel : WebDocuments.ServiceDocumento.IDocumentoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentoServiceClient : System.ServiceModel.ClientBase<WebDocuments.ServiceDocumento.IDocumentoService>, WebDocuments.ServiceDocumento.IDocumentoService {
        
        public DocumentoServiceClient() {
        }
        
        public DocumentoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int RegistrarCarpeta(WebDocuments.ServiceDocumento.BECarpeta oParametro) {
            return base.Channel.RegistrarCarpeta(oParametro);
        }
        
        public System.Threading.Tasks.Task<int> RegistrarCarpetaAsync(WebDocuments.ServiceDocumento.BECarpeta oParametro) {
            return base.Channel.RegistrarCarpetaAsync(oParametro);
        }
        
        public int EliminarCarpeta(WebDocuments.ServiceDocumento.BECarpeta oParametro) {
            return base.Channel.EliminarCarpeta(oParametro);
        }
        
        public System.Threading.Tasks.Task<int> EliminarCarpetaAsync(WebDocuments.ServiceDocumento.BECarpeta oParametro) {
            return base.Channel.EliminarCarpetaAsync(oParametro);
        }
        
        public bool ModificarCarpeta(WebDocuments.ServiceDocumento.BECarpeta oParametro) {
            return base.Channel.ModificarCarpeta(oParametro);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarCarpetaAsync(WebDocuments.ServiceDocumento.BECarpeta oParametro) {
            return base.Channel.ModificarCarpetaAsync(oParametro);
        }
        
        public bool ModificarCarpetaGestion(WebDocuments.ServiceDocumento.BECarpeta oParametro) {
            return base.Channel.ModificarCarpetaGestion(oParametro);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarCarpetaGestionAsync(WebDocuments.ServiceDocumento.BECarpeta oParametro) {
            return base.Channel.ModificarCarpetaGestionAsync(oParametro);
        }
        
        public WebDocuments.ServiceDocumento.BECarpeta ObtenerCarpeta(int cod_carpeta) {
            return base.Channel.ObtenerCarpeta(cod_carpeta);
        }
        
        public System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BECarpeta> ObtenerCarpetaAsync(int cod_carpeta) {
            return base.Channel.ObtenerCarpetaAsync(cod_carpeta);
        }
        
        public int RegistrarDocumento(WebDocuments.ServiceDocumento.BEDocumento oParametro) {
            return base.Channel.RegistrarDocumento(oParametro);
        }
        
        public System.Threading.Tasks.Task<int> RegistrarDocumentoAsync(WebDocuments.ServiceDocumento.BEDocumento oParametro) {
            return base.Channel.RegistrarDocumentoAsync(oParametro);
        }
        
        public bool ModificarDocumento(WebDocuments.ServiceDocumento.BEDocumento oParametro) {
            return base.Channel.ModificarDocumento(oParametro);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarDocumentoAsync(WebDocuments.ServiceDocumento.BEDocumento oParametro) {
            return base.Channel.ModificarDocumentoAsync(oParametro);
        }
        
        public bool ModificarNombreArchivo(int codigo, string descripcionDocumento, string nombreArchivo, System.DateTime fechaVigencia, string usuarioModificacion) {
            return base.Channel.ModificarNombreArchivo(codigo, descripcionDocumento, nombreArchivo, fechaVigencia, usuarioModificacion);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarNombreArchivoAsync(int codigo, string descripcionDocumento, string nombreArchivo, System.DateTime fechaVigencia, string usuarioModificacion) {
            return base.Channel.ModificarNombreArchivoAsync(codigo, descripcionDocumento, nombreArchivo, fechaVigencia, usuarioModificacion);
        }
        
        public WebDocuments.ServiceDocumento.BEDocumento ObtenerDocumento(int cod_documento) {
            return base.Channel.ObtenerDocumento(cod_documento);
        }
        
        public System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento> ObtenerDocumentoAsync(int cod_documento) {
            return base.Channel.ObtenerDocumentoAsync(cod_documento);
        }
        
        public WebDocuments.ServiceDocumento.BEDocumento ObtenerDocumentoDownload(int cod_documento) {
            return base.Channel.ObtenerDocumentoDownload(cod_documento);
        }
        
        public System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento> ObtenerDocumentoDownloadAsync(int cod_documento) {
            return base.Channel.ObtenerDocumentoDownloadAsync(cod_documento);
        }
        
        public WebDocuments.ServiceDocumento.BEDocumento[] ListarDocumento(WebDocuments.ServiceDocumento.BEDocumento oBusqueda) {
            return base.Channel.ListarDocumento(oBusqueda);
        }
        
        public System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento[]> ListarDocumentoAsync(WebDocuments.ServiceDocumento.BEDocumento oBusqueda) {
            return base.Channel.ListarDocumentoAsync(oBusqueda);
        }
        
        public WebDocuments.ServiceDocumento.BEDocumento[] ListarDocumentoPorCarpeta(int cod_carpeta) {
            return base.Channel.ListarDocumentoPorCarpeta(cod_carpeta);
        }
        
        public System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento[]> ListarDocumentoPorCarpetaAsync(int cod_carpeta) {
            return base.Channel.ListarDocumentoPorCarpetaAsync(cod_carpeta);
        }
        
        public WebDocuments.ServiceDocumento.BEDocumento[] ListarDocumentoPorCarpetaSegunUsuario(int cod_carpeta, string cod_usuario) {
            return base.Channel.ListarDocumentoPorCarpetaSegunUsuario(cod_carpeta, cod_usuario);
        }
        
        public System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento[]> ListarDocumentoPorCarpetaSegunUsuarioAsync(int cod_carpeta, string cod_usuario) {
            return base.Channel.ListarDocumentoPorCarpetaSegunUsuarioAsync(cod_carpeta, cod_usuario);
        }
        
        public WebDocuments.ServiceDocumento.BEDocumento[] ListarDocumentoPorUsuario(string cod_usuario) {
            return base.Channel.ListarDocumentoPorUsuario(cod_usuario);
        }
        
        public System.Threading.Tasks.Task<WebDocuments.ServiceDocumento.BEDocumento[]> ListarDocumentoPorUsuarioAsync(string cod_usuario) {
            return base.Channel.ListarDocumentoPorUsuarioAsync(cod_usuario);
        }
        
        public string GetNombreArchivo(int cod_documento) {
            return base.Channel.GetNombreArchivo(cod_documento);
        }
        
        public System.Threading.Tasks.Task<string> GetNombreArchivoAsync(int cod_documento) {
            return base.Channel.GetNombreArchivoAsync(cod_documento);
        }
        
        public bool EliminarDocumento(int cod_documento, string cod_usuario) {
            return base.Channel.EliminarDocumento(cod_documento, cod_usuario);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarDocumentoAsync(int cod_documento, string cod_usuario) {
            return base.Channel.EliminarDocumentoAsync(cod_documento, cod_usuario);
        }
    }
}
